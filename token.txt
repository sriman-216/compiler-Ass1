1 : RESERVED WORD : func
1 : IDENTIFIER : total_area
1 : PUNCTUATION : (
1 : PUNCTUATION : ACCESS OPERATOR : [
1 : TYPE : float
1 : PUNCTUATION : ACCESS OPERATOR : ]
1 : IDENTIFIER : h
1 : PUNCTUATION : ,
1 : PUNCTUATION : ACCESS OPERATOR : [
1 : TYPE : float
1 : PUNCTUATION : ACCESS OPERATOR : ]
1 : IDENTIFIER : b
1 : PUNCTUATION : ;
1 : PUNCTUATION : )
1 : PUNCTUATION : COMPARISON OPERATOR : <
2 : TYPE : float
2 : IDENTIFIER : sum
2 : ARITHMETIC OPERATOR : =
2 : CONSTANT : 0
2 : PUNCTUATION : ;
3 : RESERVED WORD : loop
3 : PUNCTUATION : (
3 : TYPE : int
3 : IDENTIFIER : i
3 : ARITHMETIC OPERATOR : =
3 : CONSTANT : 0
3 : PUNCTUATION : ;
3 : IDENTIFIER : i
3 : PUNCTUATION : COMPARISON OPERATOR : <
3 : RESERVED WORD : size
3 : PUNCTUATION : ACCESS OPERATOR : [
3 : IDENTIFIER : h
3 : PUNCTUATION : ACCESS OPERATOR : ]
3 : PUNCTUATION : ;
3 : IDENTIFIER : i
3 : ARITHMETIC OPERATOR : =
3 : IDENTIFIER : i
3 : ARITHMETIC OPERATOR : +
3 : CONSTANT : 1
3 : PUNCTUATION : )
3 : PUNCTUATION : :
4 : PUNCTUATION : COMPARISON OPERATOR : <
5 : IDENTIFIER : sum
5 : ARITHMETIC OPERATOR : =
5 : IDENTIFIER : sum
5 : ARITHMETIC OPERATOR : +
5 : IDENTIFIER : h
5 : PUNCTUATION : ACCESS OPERATOR : [
5 : IDENTIFIER : i
5 : PUNCTUATION : ACCESS OPERATOR : ]
5 : ARITHMETIC OPERATOR : *
5 : IDENTIFIER : b
5 : PUNCTUATION : ACCESS OPERATOR : [
5 : IDENTIFIER : i
5 : PUNCTUATION : ACCESS OPERATOR : ]
5 : PUNCTUATION : ;
6 : PUNCTUATION : COMPARISON OPERATOR : >
7 : PUNCTUATION : COMPARISON OPERATOR : >
8 : PUNCTUATION : COMPARISON OPERATOR : <
8 : IDENTIFIER : marks
8 : PUNCTUATION : COMPARISON OPERATOR : >
8 : CONSTANT : 70
8 : PUNCTUATION : ?
9 : IDENTIFIER : grade
9 : ARITHMETIC OPERATOR : =
9 : CONSTANT : 10
9 : PUNCTUATION : ;
11 : IDENTIFIER : good_kids
11 : ARITHMETIC OPERATOR : =
11 : IDENTIFIER : good_kids
11 : ARITHMETIC OPERATOR : +
11 : CONSTANT : 1
11 : PUNCTUATION : ;
12 : IDENTIFIER : marks
12 : PUNCTUATION : COMPARISON OPERATOR : >
12 : CONSTANT : 50
12 : PUNCTUATION : ?
13 : IDENTIFIER : a
13 : ARITHMETIC OPERATOR : =
13 : IDENTIFIER : total_area
13 : PUNCTUATION : (
13 : IDENTIFIER : q
13 : PUNCTUATION : ,
13 : IDENTIFIER : p
13 : PUNCTUATION : )
13 : PUNCTUATION : ;
14 : RESERVED WORD : else
14 : PUNCTUATION : :
14 : IDENTIFIER : grade
14 : ARITHMETIC OPERATOR : =
14 : CONSTANT : 4
14 : PUNCTUATION : ;
15 : PUNCTUATION : COMPARISON OPERATOR : >
17 : RESERVED WORD : loop
17 : PUNCTUATION : (
17 : TYPE : int
17 : IDENTIFIER : i
17 : ARITHMETIC OPERATOR : =
17 : CONSTANT : 0
17 : PUNCTUATION : ;
17 : IDENTIFIER : i
17 : PUNCTUATION : COMPARISON OPERATOR : <
17 : RESERVED WORD : size
17 : PUNCTUATION : ACCESS OPERATOR : [
17 : IDENTIFIER : myvec
17 : PUNCTUATION : ACCESS OPERATOR : ]
17 : ARITHMETIC OPERATOR : -
17 : CONSTANT : 1
17 : PUNCTUATION : ;
17 : IDENTIFIER : i
17 : ARITHMETIC OPERATOR : =
17 : IDENTIFIER : i
17 : ARITHMETIC OPERATOR : +
17 : CONSTANT : 1
17 : PUNCTUATION : )
17 : PUNCTUATION : :
18 : PUNCTUATION : COMPARISON OPERATOR : <
19 : IDENTIFIER : myvec
19 : PUNCTUATION : ACCESS OPERATOR : [
19 : IDENTIFIER : i
19 : PUNCTUATION : ACCESS OPERATOR : ]
19 : ARITHMETIC OPERATOR : =
19 : CONSTANT : 2
19 : ARITHMETIC OPERATOR : *
19 : IDENTIFIER : myvec
19 : PUNCTUATION : ACCESS OPERATOR : [
19 : IDENTIFIER : i
19 : PUNCTUATION : ACCESS OPERATOR : ]
19 : ARITHMETIC OPERATOR : +
19 : IDENTIFIER : myvec
19 : PUNCTUATION : ACCESS OPERATOR : [
19 : IDENTIFIER : i
19 : ARITHMETIC OPERATOR : +
19 : CONSTANT : 1
19 : PUNCTUATION : ACCESS OPERATOR : ]
19 : PUNCTUATION : ;
21 : PUNCTUATION : COMPARISON OPERATOR : >
22 : RESERVED WORD : finally
22 : PUNCTUATION : :
23 : PUNCTUATION : COMPARISON OPERATOR : <
24 : IDENTIFIER : myvec
24 : PUNCTUATION : ACCESS OPERATOR : [
24 : IDENTIFIER : i
24 : PUNCTUATION : ACCESS OPERATOR : ]
24 : ARITHMETIC OPERATOR : =
24 : CONSTANT : 2
24 : ARITHMETIC OPERATOR : *
24 : IDENTIFIER : myvec
24 : PUNCTUATION : ACCESS OPERATOR : [
24 : IDENTIFIER : i
24 : PUNCTUATION : ACCESS OPERATOR : ]
24 : PUNCTUATION : ;
25 : PUNCTUATION : COMPARISON OPERATOR : >
